{"version":3,"sources":["pinpoint.png","pinpoint2.png","components/SideDrawer/DrawerToggleButton.js","components/Toolbar/Toolbar.js","components/SideDrawer/SideDrawer.js","components/Backdrop/Backdrop.js","components/Contents/MainView.js","components/CardForm/CardForm.js","API.js","components/Contents/MapView.js","components/Contents/CameraView.js","components/Contents/DataView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","drawerToggleButton","props","react_default","a","createElement","className","onClick","click","toolbar","SideDrawer_DrawerToggleButton","drawerClickHandler","react_router_dom","to","sideDrawer","drawerClasses","show","backdrop","MainView","Container","Row","Col","xs","lg","Card","body","inverse","CardTitle","CardText","Button","color","Component","CardForm","sendingLocation","sentLocation","haveUsersLocation","Form","onSubmit","formSubmitted","FormGroup","Label","for","Input","onChange","valueChanged","type","step","name","id","placeholder","cancelLocation","disabled","formIsValid","API_URL","window","location","hostname","getCurLoc","getDest","postDest","myIcon","L","icon","iconUrl","pin","iconSize","iconAnchor","popupAnchor","myIcon2","pin2","schema","Joi","object","keys","latitude","number","min","max","required","longitude","MapView","state","lat","lng","zoom","userSetDest","slat","slng","curLocations","destinations","showLocationForm","updateLocation","fetch","then","res","json","destination","_this","setState","curLocation","validate","error","event","preventDefault","dest","method","headers","content-type","JSON","stringify","result","setTimeout","_event$target","target","value","prevState","Object","objectSpread","defineProperty","this","pos","length","temp","parseFloat","Map","center","TileLayer","attribution","url","Marker","position","Popup","components_CardForm_CardForm","CameraView","DataView","App","sideDrawerOpen","drawerToggleClickHandler","backdropClickHandler","Backdrop_Backdrop","style","height","Toolbar_Toolbar","SideDrawer_SideDrawer","react_router","exact","path","component","Boolean","match","startApp","ReactDOM","render","src_App","document","getElementById","cordova","addEventListener","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08ab15ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pinpoint.b0112773.png\";","module.exports = __webpack_public_path__ + \"static/media/pinpoint2.9d47d235.png\";","import React from 'react';\r\n\r\nimport './DrawerToggleButton.css'\r\n\r\nconst drawerToggleButton = props => (\r\n    <button className=\"toggle-button\" onClick={props.click}>\r\n        <div className=\"toggle-button__line\" />\r\n        <div className=\"toggle-button__line\" />\r\n        <div className=\"toggle-button__line\" />\r\n    </button>\r\n);\r\n\r\nexport default drawerToggleButton;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport DrawerToggleButton from '../SideDrawer/DrawerToggleButton';\r\nimport './Toolbar.css';\r\n\r\nconst toolbar = props => (\r\n    <header className=\"toolbar border\">\r\n        <nav className=\"toolbar__navigation\">\r\n            <div className=\"toolbar__toggle-button\">\r\n                <DrawerToggleButton click={props.drawerClickHandler}/>\r\n            </div>\r\n            <div className=\"toolbar__logo\"><NavLink to=\"/\">ECOSAIL</NavLink></div>\r\n            <div className=\"spacer\" />\r\n            <div className=\"toolbar_navigation-items\">\r\n                <ul>\r\n                    <li><NavLink to=\"/\">Main</NavLink></li>\r\n                    <li><NavLink to=\"/map\">Map</NavLink></li>\r\n                    <li><NavLink to=\"/camera\">Camera</NavLink></li>\r\n                    <li><NavLink to=\"/data\">Data</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './SideDrawer.css';\r\n\r\nconst sideDrawer = props => {\r\n    \r\n    let drawerClasses = 'side-drawer';\r\n    if (props.show) {\r\n        drawerClasses = 'side-drawer open';\r\n    }\r\n\r\n    return (\r\n        <nav className={drawerClasses}>\r\n            <div className=\"picture\">\r\n                <label>picture here</label>\r\n            </div>\r\n            <ul>\r\n                <li><NavLink to=\"/\">Main</NavLink></li>\r\n                <li><NavLink to=\"/map\">Map</NavLink></li>\r\n                <li><NavLink to=\"/camera\">Camera</NavLink></li>\r\n                <li><NavLink to=\"/data\">Data</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => (\r\n    <div className=\"backdrop\" onClick={props.click}/>\r\n);\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\nimport { Card, Button, CardTitle, CardText, Container, Row, Col } from 'reactstrap';\r\nimport './MainView.css';\r\n\r\nclass MainView extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Container>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col xs lg=\"5\">\r\n                            <Card body inverse className=\"main-item\">\r\n                                <CardTitle>Add New Boat</CardTitle>\r\n                                <CardText>Adding a new boat id.</CardText>\r\n                                <Button>Add</Button>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs lg=\"5\">\r\n                            <Card body inverse color=\"success\">\r\n                                <CardTitle>Boat activation</CardTitle>\r\n                                <CardText>Activate boats</CardText>\r\n                                <Button color=\"secondary\">Button</Button>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainView;","import React from 'react';\r\nimport { Card, Button, CardTitle, CardText, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nimport './CardForm.css';\r\n\r\nconst CardForm = (props) => {\r\n  return (\r\n    <Card body className=\"location-form\">\r\n      <CardTitle>Sailboat Geolocation</CardTitle>\r\n      {//<CardText>Please input the longitude and latitude for the sailboat.</CardText>\r\n      }\r\n      {\r\n        !props.sendingLocation && !props.sentLocation && props.haveUsersLocation ?\r\n          <Form onSubmit={props.formSubmitted}>\r\n            <FormGroup>\r\n                <Label for=\"slat\">Latitude</Label>\r\n                <Input \r\n                    onChange={props.valueChanged}\r\n                    type=\"number\" \r\n                    step=\"0.0000001\"\r\n                    name=\"slat\" \r\n                    id=\"slat\" \r\n                    placeholder=\"Enter the latitude\" />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"slng\">Longitude</Label>\r\n                <Input \r\n                    onChange={props.valueChanged}\r\n                    type=\"number\"\r\n                    step=\"0.0000001\" \r\n                    name=\"slng\" \r\n                    id=\"slng\" \r\n                    placeholder=\"Enter the longitude\" />\r\n            </FormGroup>\r\n            <Button type=\"cancel\" color=\"danger\" onClick={props.cancelLocation}>Cancel</Button> {' '}\r\n            <Button type=\"submit\" color=\"info\" disabled={!props.formIsValid()}>Send</Button>\r\n          </Form> :\r\n          props.sendingLocation || !props.haveUsersLocation ? \r\n            <CardText>Successfully submit a location!</CardText> : \"\"\r\n      }\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardForm;\r\n","const API_URL = window.location.hostname === 'localhost' ? 'http://localhost:5000' : 'http://52.221.214.117:5000';\r\nconst getCurLoc = API_URL + '/authed/data/getCurLocation'\r\nconst getDest = API_URL + '/authed/data/getDestination'\r\nconst postDest = API_URL + '/authed/data/postDestination'\r\n\r\n// Get boat destination from database\r\nexport function getDestination() {\r\n    //Fetching the sailboat latest destination\r\n    return fetch(getDest)\r\n        .then(res => res.json())\r\n        .then(destination => {\r\n            //console.log(\"! \"+destination[destination.length-1].latitude)\r\n            return destination;\r\n        });\r\n}\r\n\r\n// Get boat current location from database\r\nexport function getCurLocation() {\r\n    return fetch(getCurLoc)\r\n        .then(res => res.json())\r\n        .then(curLocation => {\r\n            return curLocation;\r\n        });\r\n}\r\n\r\n// POst the destination set by user\r\nexport function sendLocation(location) {\r\n  return fetch(postDest, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify(location)\r\n  }).then(res => res.json());\r\n}","import React, { Component } from 'react';\r\nimport L from 'leaflet';\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { Button } from 'reactstrap';\r\nimport Joi from 'joi';\r\nimport pin from '../../pinpoint.png'; \r\nimport pin2 from '../../pinpoint2.png'; \r\nimport './MapView.css';\r\nimport CardForm from '../CardForm/CardForm';\r\nimport { getDestination, getCurLocation, sendLocation } from '../../API';\r\n\r\nvar myIcon = L.icon({\r\n    iconUrl: pin,\r\n    iconSize: [30, 41],\r\n    iconAnchor: [12.5, 40],\r\n    popupAnchor: [0, -45],\r\n})\r\n  \r\nvar myIcon2 = L.icon({\r\n    iconUrl: pin2,\r\n    iconSize: [30, 41],\r\n    iconAnchor: [12.5, 40],\r\n    popupAnchor: [0, -45],\r\n})\r\n\r\nconst schema = Joi.object().keys({\r\n    latitude: Joi.number().min(-90).max(90).required(),\r\n    longitude: Joi.number().min(-180).max(180).required()\r\n});  \r\n\r\nclass MapView extends Component {\r\n\r\n    state = {\r\n        location: {\r\n          lat: 5.354482, \r\n          lng: 100.301226,\r\n        },\r\n        haveUsersLocation: false,\r\n        zoom: 1,\r\n        userSetDest: {\r\n          slat: '',\r\n          slng: '',\r\n        },\r\n        curLocations: [],\r\n        destinations: [],\r\n        showLocationForm: false,\r\n        sendingLocation: false,\r\n        sentLocation: false,\r\n    };\r\n    \r\n    /*  \r\n    // Get user geolocation and reconfigurate some attributes\r\n    componentDidMount(){\r\n        // Location from the database\r\n        getDestination()\r\n            .then(destinations => {\r\n                this.setState({\r\n                    destinations,\r\n                });\r\n            });\r\n        \r\n        getCurLocation()\r\n            .then(curLocations => {        \r\n                //console.log(Object.keys(curLoc));\r\n                //console.log(\"that: \"+curLocations);\r\n                this.setState({\r\n                    curLocations,\r\n                    haveUsersLocation: true,\r\n                    zoom: 18\r\n                });\r\n            });\r\n        \r\n        \r\n    };*/\r\n    \r\n    // Get user geolocation and reconfigurate some attributes\r\n    updateLocation = () => {\r\n        getDestination()\r\n            .then(destinations => {\r\n                this.setState({\r\n                    destinations,\r\n                });\r\n            });\r\n        \r\n        getCurLocation()\r\n            .then(curLocations => {        \r\n                this.setState({\r\n                    curLocations,\r\n                    haveUsersLocation: true,\r\n                    zoom: 18\r\n                });\r\n            });\r\n    }\r\n    \r\n    showLocationForm = () => {\r\n        this.setState({\r\n        showLocationForm: true\r\n        });\r\n    }\r\n    \r\n    cancelLocation = () => {\r\n        this.setState({\r\n            showLocationForm: false\r\n        });\r\n    }\r\n    \r\n    formIsValid = () => {\r\n        const userSetDest = {\r\n            latitude: this.state.userSetDest.slat,\r\n            longitude: this.state.userSetDest.slng\r\n        };\r\n        const result = Joi.validate(userSetDest, schema);\r\n        //console.log(userSetDest);\r\n        return !result.error && userSetDest ? true : false;\r\n    };\r\n    \r\n    formSubmitted = (event) => {\r\n        event.preventDefault();\r\n        //console.log(this.state.userSetDest);\r\n        \r\n        if (this.formIsValid()){\r\n            //if no error\r\n            this.setState({\r\n                sendingLocation: true\r\n            });\r\n    \r\n        const dest = {\r\n            latitude: this.state.userSetDest.slat,\r\n            longitude: this.state.userSetDest.slng\r\n        };\r\n    \r\n        sendLocation(dest)\r\n            .then((result) => {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                    sendingLocation: false,\r\n                    sentLocation: true\r\n                    });\r\n                }, 4000);\r\n            });\r\n        }\r\n    };\r\n    \r\n    valueChanged = (event) => {\r\n        const { name, value } = event.target; \r\n        this.setState((prevState) => ({\r\n            userSetDest: {\r\n                ...prevState.userSetDest,\r\n                [name]: value,\r\n            }\r\n        }))\r\n    };\r\n\r\n    render() {\r\n        this.updateLocation();\r\n\r\n        var pos = [this.state.location.lat, this.state.location.lng];\r\n        var dest = [this.state.location.lat, this.state.location.lng];\r\n        if (Object.keys(this.state.curLocations).length != 0){\r\n            var temp = this.state.curLocations;\r\n            //console.log(\"thit: \"+this.state.curLocations);\r\n            pos[0] = parseFloat(temp.latitude);\r\n            pos[1] = parseFloat(temp.longitude);\r\n        }\r\n        if (Object.keys(this.state.destinations).length != 0){\r\n            //var temp = this.state.destinations[this.state.destinations.length-1];\r\n            //console.log(\"thit: \"+this.state.curLocations);\r\n            dest[0] = parseFloat(this.state.destinations.latitude);\r\n            dest[1] = parseFloat(this.state.destinations.longitude);\r\n            //console.log(\" ~ \"+parseFloat(this.state.destinations.latitude));\r\n        }\r\n        //console.log(\"ye \"+dest[0]);\r\n        //console.log(Object.values(pos));\r\n        return (\r\n            <div>\r\n                <Map className=\"map\" center={pos} zoom={this.state.zoom}>\r\n                    <TileLayer\r\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n                    { \r\n                    this.state.haveUsersLocation ?\r\n                    <Marker \r\n                        position={pos} \r\n                        icon={myIcon}>\r\n                        <Popup>\r\n                            lat:{pos[0]}, lng:{pos[1]}\r\n                        </Popup>\r\n                    </Marker> : \"\"\r\n                    }\r\n                    {\r\n                    this.state.haveUsersLocation ?                    \r\n                    <Marker \r\n                        position={dest} \r\n                        icon={myIcon2}>\r\n                        <Popup>\r\n                            lat:{dest[0]}, lng:{dest[1]}\r\n                        </Popup>\r\n                    </Marker> : \"\"\r\n                    } \r\n                </Map>\r\n                {\r\n                  !this.state.showLocationForm ?\r\n                  <Button className=\"location-form\" onClick={this.showLocationForm} color=\"info\">Add a location</Button> :\r\n                  !this.state.sentLocation ?\r\n                  <CardForm\r\n                      cancelLocation={this.cancelLocation}\r\n                      showLocationForm={this.state.showLocationForm}\r\n                      sendingLocation={this.state.sendingLocation}\r\n                      sentLocation={this.state.sentLocation}\r\n                      haveUsersLocation={this.state.haveUsersLocation}\r\n                      formSubmitted={this.formSubmitted}\r\n                      valueChanged={this.valueChanged}\r\n                      formIsValid={this.formIsValid}\r\n                  /> :\r\n                  this.setState({\r\n                      sentLocation: false,\r\n                      showLocationForm: false\r\n                  })\r\n                } \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MapView;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass CameraView extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Camera view</h2>\r\n       \r\n                <p>Duis a turpis sed lacus dapibus elementum sed eu lectus.</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CameraView;","import React, { Component } from 'react';\r\n\r\nclass DataView extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>HELLO</h2>\r\n                <p>Cras facilisis urna ornare ex volutpat, et\r\n                convallis erat elementum. Ut aliquam, ipsum vitae\r\n                gravida suscipit, metus dui bibendum est, eget rhoncus nibh\r\n                metus nec massa. Maecenas hendrerit laoreet augue\r\n                nec molestie. Cum sociis natoque penatibus et magnis\r\n                dis parturient montes, nascetur ridiculus mus.</p>\r\n        \r\n                <p>Duis a turpis sed lacus dapibus elementum sed eu lectus.</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataView;","import React, { Component } from 'react';\nimport { Route, HashRouter } from \"react-router-dom\";\n\n// Component for side drawer and toolbar\nimport Toolbar from './components/Toolbar/Toolbar';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport MainView from './components/Contents/MainView';\nimport MapView from './components/Contents/MapView';\nimport CameraView from './components/Contents/CameraView';\nimport DataView from './components/Contents/DataView';\n//import classnames from 'classnames';\n\nclass App extends Component {\n\n  state = {\n    //sideDrawer \n    sideDrawerOpen: false\n  }\n  \n  // Sidedrawer function\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return {sideDrawerOpen: !prevState.sideDrawerOpen};\n    });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({sideDrawerOpen: false});\n  };\n\n  render(){\n    // sidedrawer backdrop variable\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler}/>;\n    }\n    \n    return (\n      <HashRouter>\n        <div style={{height: '100%'}}>\n          <Toolbar drawerClickHandler={this.drawerToggleClickHandler}/> \n          <SideDrawer show={this.state.sideDrawerOpen}/>\n          {backdrop}\n          <div className=\"content\">\n            <Route exact path=\"/\" component={MainView}/>\n            <Route path=\"/map\" component={MapView}/>\n            <Route path=\"/camera\" component={CameraView}/>\n            <Route path=\"/data\" component={DataView}/>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'leaflet/dist/leaflet.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst startApp = () => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n}\n\n// IOS or Android setting\nif (window.cordova) {\n    document.addEventListener('deviceready', startApp, false);\n} else {\n    startApp();\n}\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}